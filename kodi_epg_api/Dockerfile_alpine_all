# Comments on
# 1) build
# 2) run
# 3) update

#docker build -t kodi_all:0.1 -f Dockerfile_alpine_all .

# outside
#docker run --env-file=.env -d -p 0.0.0.0:3002:3002 -p 0.0.0.0:3001:3000 --restart unless-stopped --name kodi_all kodi_all:0.1
# locally
#docker run --env-file=.env -d -p 127.0.0.1:3002:3002 -p 127.0.0.1:3001:3000 --restart unless-stopped --name kodi_all kodi_all:0.1

# update guide regularly via
# docker exec -w <working dir> <container id | name> npm run grab -- --site=<web site>, e.g.
#docker exec -w /iptv/epg/scripts/commands/epg/ kodi_all npm run grab -- --site=chaines-tv.orange.fr
# crontab -e
#0 9,12,15,18 * * * docker exec -w /iptv/epg/scripts/commands/epg/ kodi_all npm run grab -- --site=chaines-tv.orange.fr

FROM alpine:latest

# iptv service
WORKDIR /iptv/iptv/
COPY src/* src/
COPY requirements.txt .

RUN apk update \
    && apk upgrade
RUN apk add git \
    && apk add nodejs npm \
    && apk add --update npm
RUN apk add py3-pip
RUN pip install --upgrade pip\
    && pip install -r requirements.txt \
    && rm -f requirements.txt

WORKDIR /iptv/
COPY wrapper.sh .
RUN ["chmod", "+x", "wrapper.sh"]
RUN git clone --depth 1 -b master https://github.com/iptv-org/epg.git

WORKDIR /iptv/epg/
# 512 MiB on raspberry Pi 3 B
ARG MAX_OLD_SPACE_SIZE=1024
ENV NODE_OPTIONS="--max_old_space_size=${MAX_OLD_SPACE_SIZE}"
RUN npm install

ENV URL ${URL}

# start the web server at
# http://<intranet host name/ip address>:3001/guide.xml
# http://<intranet host name/IP address>:3002/iptv/read
WORKDIR /iptv/
CMD ./wrapper.sh